{
    "sourceFile": "src/components/EditableInput.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 27,
            "patches": [
                {
                    "date": 1632463527797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1632463829900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React from 'react';\r\n \r\n-const EditableInput = () => {\r\n+const EditableInput = ({ initialValue, name, label, onSave }) => {\r\n   return <div>Hello</div>;\r\n };\r\n \r\n export default EditableInput;\r\n"
                },
                {
                    "date": 1632463949897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,12 @@\n import React from 'react';\r\n \r\n-const EditableInput = ({ initialValue, name, label, onSave }) => {\r\n+const EditableInput = ({\r\n+  initialValue,\r\n+  onSave,\r\n+  label = '',\r\n+  placeholder = 'Write your value',\r\n+}) => {\r\n   return <div>Hello</div>;\r\n };\r\n \r\n export default EditableInput;\r\n"
                },
                {
                    "date": 1632464015971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,10 @@\n   initialValue,\r\n   onSave,\r\n   label = '',\r\n   placeholder = 'Write your value',\r\n+  emptyMsg = 'Input is empty ',\r\n+  ...inputProps\r\n }) => {\r\n   return <div>Hello</div>;\r\n };\r\n \r\n"
                },
                {
                    "date": 1632464217913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n-import React from 'react';\r\n+import React, { useCallback, useState } from 'react';\r\n+import { Input } from 'rsuite';\r\n \r\n const EditableInput = ({\r\n   initialValue,\r\n   onSave,\r\n@@ -7,8 +8,17 @@\n   placeholder = 'Write your value',\r\n   emptyMsg = 'Input is empty ',\r\n   ...inputProps\r\n }) => {\r\n-  return <div>Hello</div>;\r\n+  const [input, setinput] = useState(initialValue);\r\n+  const onInputChange = useCallback(value => {\r\n+    setinput(value);\r\n+  });\r\n+  return (\r\n+    <div>\r\n+      {label}\r\n+      <Input {...inputProps} placeholder={placeholder} />\r\n+    </div>\r\n+  );\r\n };\r\n \r\n export default EditableInput;\r\n"
                },
                {
                    "date": 1632464232798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,13 @@\n   });\r\n   return (\r\n     <div>\r\n       {label}\r\n-      <Input {...inputProps} placeholder={placeholder} />\r\n+      <Input\r\n+        {...inputProps}\r\n+        placeholder={placeholder}\r\n+        onChange={onInputChange}\r\n+      />\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1632464265378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+import React, { useCallback, useState } from 'react';\r\n+import { Input } from 'rsuite';\r\n+\r\n+const EditableInput = ({\r\n+  initialValue,\r\n+  onSave,\r\n+  label = '',\r\n+  placeholder = 'Write your value',\r\n+  emptyMsg = 'Input is empty ',\r\n+  ...inputProps\r\n+}) => {\r\n+  const [input, setinput] = useState(initialValue);\r\n+  const onInputChange = useCallback(value => {\r\n+    setinput(value);\r\n+  });\r\n+  return (\r\n+    <div>\r\n+      {label}\r\n+      <Input\r\n+        {...inputProps}\r\n+        placeholder={placeholder}\r\n+        value={input}\r\n+        onChange={onInputChange}\r\n+      />\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default EditableInput;\r\n"
                },
                {
                    "date": 1632464321656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,30 @@\n+import React, { useCallback, useState } from 'react';\r\n+import { Input } from 'rsuite';\r\n+\r\n+const EditableInput = ({\r\n+  initialValue,\r\n+  onSave,\r\n+  label = '',\r\n+  placeholder = 'Write your value',\r\n+  emptyMsg = 'Input is empty ',\r\n+  ...inputProps\r\n+}) => {\r\n+  const [input, setinput] = useState(initialValue);\r\n+  const [isEditable, setIsEditable] = useState(false);\r\n+  const onInputChange = useCallback(value => {\r\n+    setinput(value);\r\n+  });\r\n+  return (\r\n+    <div>\r\n+      {label}\r\n+      <Input\r\n+        {...inputProps}\r\n+        placeholder={placeholder}\r\n+        value={input}\r\n+        onChange={onInputChange}\r\n+      />\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default EditableInput;\r\n"
                },
                {
                    "date": 1632464465826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import React, { useCallback, useState } from 'react';\r\n+import { Input, InputGroup } from 'rsuite';\r\n+\r\n+const EditableInput = ({\r\n+  initialValue,\r\n+  onSave,\r\n+  label = '',\r\n+  placeholder = 'Write your value',\r\n+  emptyMsg = 'Input is empty ',\r\n+  ...inputProps\r\n+}) => {\r\n+  const [input, setinput] = useState(initialValue);\r\n+  const [isEditable, setIsEditable] = useState(false);\r\n+  const onInputChange = useCallback(value => {\r\n+    setinput(value);\r\n+  });\r\n+  return (\r\n+    <div>\r\n+      {label}\r\n+      <Input\r\n+        {...inputProps}\r\n+        disabled={!isEditable}\r\n+        placeholder={placeholder}\r\n+        value={input}\r\n+        onChange={onInputChange}\r\n+      />\r\n+      <InputGroup.Button>\r\n+        <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n+      </InputGroup.Button>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default EditableInput;\r\n"
                },
                {
                    "date": 1632464475712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useCallback, useState } from 'react';\r\n-import { Input, InputGroup } from 'rsuite';\r\n+import { Icon, Input, InputGroup } from 'rsuite';\r\n \r\n const EditableInput = ({\r\n   initialValue,\r\n   onSave,\r\n@@ -31,91 +31,4 @@\n   );\r\n };\r\n \r\n export default EditableInput;\r\n-import React, { useCallback, useState } from 'react';\r\n-import { Input } from 'rsuite';\r\n-\r\n-const EditableInput = ({\r\n-  initialValue,\r\n-  onSave,\r\n-  label = '',\r\n-  placeholder = 'Write your value',\r\n-  emptyMsg = 'Input is empty ',\r\n-  ...inputProps\r\n-}) => {\r\n-  const [input, setinput] = useState(initialValue);\r\n-  const [isEditable, setIsEditable] = useState(false);\r\n-  const onInputChange = useCallback(value => {\r\n-    setinput(value);\r\n-  });\r\n-  return (\r\n-    <div>\r\n-      {label}\r\n-      <Input\r\n-        {...inputProps}\r\n-        placeholder={placeholder}\r\n-        value={input}\r\n-        onChange={onInputChange}\r\n-      />\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default EditableInput;\r\n-import React, { useCallback, useState } from 'react';\r\n-import { Input } from 'rsuite';\r\n-\r\n-const EditableInput = ({\r\n-  initialValue,\r\n-  onSave,\r\n-  label = '',\r\n-  placeholder = 'Write your value',\r\n-  emptyMsg = 'Input is empty ',\r\n-  ...inputProps\r\n-}) => {\r\n-  const [input, setinput] = useState(initialValue);\r\n-  const onInputChange = useCallback(value => {\r\n-    setinput(value);\r\n-  });\r\n-  return (\r\n-    <div>\r\n-      {label}\r\n-      <Input\r\n-        {...inputProps}\r\n-        placeholder={placeholder}\r\n-        value={input}\r\n-        onChange={onInputChange}\r\n-      />\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default EditableInput;\r\n-import React, { useCallback, useState } from 'react';\r\n-import { Input } from 'rsuite';\r\n-\r\n-const EditableInput = ({\r\n-  initialValue,\r\n-  onSave,\r\n-  label = '',\r\n-  placeholder = 'Write your value',\r\n-  emptyMsg = 'Input is empty ',\r\n-  ...inputProps\r\n-}) => {\r\n-  const [input, setinput] = useState(initialValue);\r\n-  const onInputChange = useCallback(value => {\r\n-    setinput(value);\r\n-  });\r\n-  return (\r\n-    <div>\r\n-      {label}\r\n-      <Input\r\n-        {...inputProps}\r\n-        placeholder={placeholder}\r\n-        onChange={onInputChange}\r\n-      />\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default EditableInput;\r\n"
                },
                {
                    "date": 1632464596368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,13 +8,17 @@\n   placeholder = 'Write your value',\r\n   emptyMsg = 'Input is empty ',\r\n   ...inputProps\r\n }) => {\r\n-  const [input, setinput] = useState(initialValue);\r\n+  const [input, setInput] = useState(initialValue);\r\n   const [isEditable, setIsEditable] = useState(false);\r\n   const onInputChange = useCallback(value => {\r\n-    setinput(value);\r\n+    setInput(value);\r\n   });\r\n+  const onEditClick = useCallback(() => {\r\n+    setIsEditable(curr => !curr);\r\n+    setInput();\r\n+  }, []);\r\n   return (\r\n     <div>\r\n       {label}\r\n       <Input\r\n@@ -23,9 +27,9 @@\n         placeholder={placeholder}\r\n         value={input}\r\n         onChange={onInputChange}\r\n       />\r\n-      <InputGroup.Button>\r\n+      <InputGroup.Button onClick={onEditClick}>\r\n         <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n       </InputGroup.Button>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1632464617215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,10 @@\n     setInput(value);\r\n   });\r\n   const onEditClick = useCallback(() => {\r\n     setIsEditable(curr => !curr);\r\n-    setInput();\r\n-  }, []);\r\n+    setInput(initialValue);\r\n+  }, [initialValue]);\r\n   return (\r\n     <div>\r\n       {label}\r\n       <Input\r\n"
                },
                {
                    "date": 1632464645307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,37 @@\n+import React, { useCallback, useState } from 'react';\r\n+import { Icon, Input, InputGroup } from 'rsuite';\r\n+\r\n+const EditableInput = ({\r\n+  initialValue,\r\n+  onSave,\r\n+  label = '',\r\n+  placeholder = 'Write your value',\r\n+  ...inputProps\r\n+}) => {\r\n+  const [input, setInput] = useState(initialValue);\r\n+  const [isEditable, setIsEditable] = useState(false);\r\n+  const onInputChange = useCallback(value => {\r\n+    setInput(value);\r\n+  });\r\n+  const onEditClick = useCallback(() => {\r\n+    setIsEditable(curr => !curr);\r\n+    setInput(initialValue);\r\n+  }, [initialValue]);\r\n+  return (\r\n+    <div>\r\n+      {label}\r\n+      <Input\r\n+        {...inputProps}\r\n+        disabled={!isEditable}\r\n+        placeholder={placeholder}\r\n+        value={input}\r\n+        onChange={onInputChange}\r\n+      />\r\n+      <InputGroup.Button onClick={onEditClick}>\r\n+        <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n+      </InputGroup.Button>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default EditableInput;\r\n"
                },
                {
                    "date": 1632464652439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n   label = '',\r\n   placeholder = 'Write your value',\r\n   ...inputProps\r\n }) => {\r\n+  // emptyMsg = 'Input is empty ',\r\n   const [input, setInput] = useState(initialValue);\r\n   const [isEditable, setIsEditable] = useState(false);\r\n   const onInputChange = useCallback(value => {\r\n     setInput(value);\r\n@@ -34,42 +35,4 @@\n   );\r\n };\r\n \r\n export default EditableInput;\r\n-import React, { useCallback, useState } from 'react';\r\n-import { Icon, Input, InputGroup } from 'rsuite';\r\n-\r\n-const EditableInput = ({\r\n-  initialValue,\r\n-  onSave,\r\n-  label = '',\r\n-  placeholder = 'Write your value',\r\n-  emptyMsg = 'Input is empty ',\r\n-  ...inputProps\r\n-}) => {\r\n-  const [input, setInput] = useState(initialValue);\r\n-  const [isEditable, setIsEditable] = useState(false);\r\n-  const onInputChange = useCallback(value => {\r\n-    setInput(value);\r\n-  });\r\n-  const onEditClick = useCallback(() => {\r\n-    setIsEditable(curr => !curr);\r\n-    setInput(initialValue);\r\n-  }, [initialValue]);\r\n-  return (\r\n-    <div>\r\n-      {label}\r\n-      <Input\r\n-        {...inputProps}\r\n-        disabled={!isEditable}\r\n-        placeholder={placeholder}\r\n-        value={input}\r\n-        onChange={onInputChange}\r\n-      />\r\n-      <InputGroup.Button onClick={onEditClick}>\r\n-        <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n-      </InputGroup.Button>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default EditableInput;\r\n"
                },
                {
                    "date": 1632464747078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   const [input, setInput] = useState(initialValue);\r\n   const [isEditable, setIsEditable] = useState(false);\r\n   const onInputChange = useCallback(value => {\r\n     setInput(value);\r\n-  });\r\n+  }, []);\r\n   const onEditClick = useCallback(() => {\r\n     setIsEditable(curr => !curr);\r\n     setInput(initialValue);\r\n   }, [initialValue]);\r\n"
                },
                {
                    "date": 1632464771763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,18 +20,20 @@\n   }, [initialValue]);\r\n   return (\r\n     <div>\r\n       {label}\r\n-      <Input\r\n-        {...inputProps}\r\n-        disabled={!isEditable}\r\n-        placeholder={placeholder}\r\n-        value={input}\r\n-        onChange={onInputChange}\r\n-      />\r\n-      <InputGroup.Button onClick={onEditClick}>\r\n-        <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n-      </InputGroup.Button>\r\n+      <InputGroup>\r\n+        <Input\r\n+          {...inputProps}\r\n+          disabled={!isEditable}\r\n+          placeholder={placeholder}\r\n+          value={input}\r\n+          onChange={onInputChange}\r\n+        />\r\n+        <InputGroup.Button onClick={onEditClick}>\r\n+          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n+        </InputGroup.Button>\r\n+      </InputGroup>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1632464911830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,12 @@\n         <InputGroup.Button onClick={onEditClick}>\r\n           <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n         </InputGroup.Button>\r\n       </InputGroup>\r\n+      {isEditable && <InputGroup.Button onClick={onEditClick}>\r\n+          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n+        </InputGroup.Button>\r\n+      </InputGroup>}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1632464941432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,12 +32,13 @@\n         <InputGroup.Button onClick={onEditClick}>\r\n           <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n         </InputGroup.Button>\r\n       </InputGroup>\r\n-      {isEditable && <InputGroup.Button onClick={onEditClick}>\r\n+      {isEditable && (\r\n+        <InputGroup.Button onClick={onEditClick}>\r\n           <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n         </InputGroup.Button>\r\n-      </InputGroup>}\r\n+      )}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1632464949044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,45 @@\n+import React, { useCallback, useState } from 'react';\r\n+import { Icon, Input, InputGroup } from 'rsuite';\r\n+\r\n+const EditableInput = ({\r\n+  initialValue,\r\n+  onSave,\r\n+  label = '',\r\n+  placeholder = 'Write your value',\r\n+  ...inputProps\r\n+}) => {\r\n+  // emptyMsg = 'Input is empty ',\r\n+  const [input, setInput] = useState(initialValue);\r\n+  const [isEditable, setIsEditable] = useState(false);\r\n+  const onInputChange = useCallback(value => {\r\n+    setInput(value);\r\n+  }, []);\r\n+  const onEditClick = useCallback(() => {\r\n+    setIsEditable(curr => !curr);\r\n+    setInput(initialValue);\r\n+  }, [initialValue]);\r\n+  return (\r\n+    <div>\r\n+      {label}\r\n+      <InputGroup>\r\n+        <Input\r\n+          {...inputProps}\r\n+          disabled={!isEditable}\r\n+          placeholder={placeholder}\r\n+          value={input}\r\n+          onChange={onInputChange}\r\n+        />\r\n+        <InputGroup.Button onClick={onEditClick}>\r\n+          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n+        </InputGroup.Button>\r\n+      </InputGroup>\r\n+      {isEditable && (\r\n+        <InputGroup.Button onClick={onSaveClick}>\r\n+          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n+        </InputGroup.Button>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default EditableInput;\r\n"
                },
                {
                    "date": 1632464972901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,45 @@\n+import React, { useCallback, useState } from 'react';\r\n+import { Icon, Input, InputGroup } from 'rsuite';\r\n+\r\n+const EditableInput = ({\r\n+  initialValue,\r\n+  onSave,\r\n+  label = '',\r\n+  placeholder = 'Write your value',\r\n+  ...inputProps\r\n+}) => {\r\n+  // emptyMsg = 'Input is empty ',\r\n+  const [input, setInput] = useState(initialValue);\r\n+  const [isEditable, setIsEditable] = useState(false);\r\n+  const onInputChange = useCallback(value => {\r\n+    setInput(value);\r\n+  }, []);\r\n+  const onEditClick = useCallback(() => {\r\n+    setIsEditable(curr => !curr);\r\n+    setInput(initialValue);\r\n+  }, [initialValue]);\r\n+  return (\r\n+    <div>\r\n+      {label}\r\n+      <InputGroup>\r\n+        <Input\r\n+          {...inputProps}\r\n+          disabled={!isEditable}\r\n+          placeholder={placeholder}\r\n+          value={input}\r\n+          onChange={onInputChange}\r\n+        />\r\n+        <InputGroup.Button onClick={onEditClick}>\r\n+          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n+        </InputGroup.Button>\r\n+        {isEditable && (\r\n+          <InputGroup.Button onClick={onSaveClick}>\r\n+            <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n+          </InputGroup.Button>\r\n+        )}\r\n+      </InputGroup>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default EditableInput;\r\n"
                },
                {
                    "date": 1632465034254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,10 @@\n   const onEditClick = useCallback(() => {\r\n     setIsEditable(curr => !curr);\r\n     setInput(initialValue);\r\n   }, [initialValue]);\r\n+\r\n+  const onSaveClick=\r\n   return (\r\n     <div>\r\n       {label}\r\n       <InputGroup>\r\n@@ -33,103 +35,13 @@\n           <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n         </InputGroup.Button>\r\n         {isEditable && (\r\n           <InputGroup.Button onClick={onSaveClick}>\r\n-            <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n+            <Icon icon='check' />\r\n           </InputGroup.Button>\r\n         )}\r\n       </InputGroup>\r\n     </div>\r\n   );\r\n };\r\n \r\n export default EditableInput;\r\n-import React, { useCallback, useState } from 'react';\r\n-import { Icon, Input, InputGroup } from 'rsuite';\r\n-\r\n-const EditableInput = ({\r\n-  initialValue,\r\n-  onSave,\r\n-  label = '',\r\n-  placeholder = 'Write your value',\r\n-  ...inputProps\r\n-}) => {\r\n-  // emptyMsg = 'Input is empty ',\r\n-  const [input, setInput] = useState(initialValue);\r\n-  const [isEditable, setIsEditable] = useState(false);\r\n-  const onInputChange = useCallback(value => {\r\n-    setInput(value);\r\n-  }, []);\r\n-  const onEditClick = useCallback(() => {\r\n-    setIsEditable(curr => !curr);\r\n-    setInput(initialValue);\r\n-  }, [initialValue]);\r\n-  return (\r\n-    <div>\r\n-      {label}\r\n-      <InputGroup>\r\n-        <Input\r\n-          {...inputProps}\r\n-          disabled={!isEditable}\r\n-          placeholder={placeholder}\r\n-          value={input}\r\n-          onChange={onInputChange}\r\n-        />\r\n-        <InputGroup.Button onClick={onEditClick}>\r\n-          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n-        </InputGroup.Button>\r\n-      </InputGroup>\r\n-      {isEditable && (\r\n-        <InputGroup.Button onClick={onSaveClick}>\r\n-          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n-        </InputGroup.Button>\r\n-      )}\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default EditableInput;\r\n-import React, { useCallback, useState } from 'react';\r\n-import { Icon, Input, InputGroup } from 'rsuite';\r\n-\r\n-const EditableInput = ({\r\n-  initialValue,\r\n-  onSave,\r\n-  label = '',\r\n-  placeholder = 'Write your value',\r\n-  ...inputProps\r\n-}) => {\r\n-  // emptyMsg = 'Input is empty ',\r\n-  const [input, setInput] = useState(initialValue);\r\n-  const [isEditable, setIsEditable] = useState(false);\r\n-  const onInputChange = useCallback(value => {\r\n-    setInput(value);\r\n-  }, []);\r\n-  const onEditClick = useCallback(() => {\r\n-    setIsEditable(curr => !curr);\r\n-    setInput(initialValue);\r\n-  }, [initialValue]);\r\n-  return (\r\n-    <div>\r\n-      {label}\r\n-      <InputGroup>\r\n-        <Input\r\n-          {...inputProps}\r\n-          disabled={!isEditable}\r\n-          placeholder={placeholder}\r\n-          value={input}\r\n-          onChange={onInputChange}\r\n-        />\r\n-        <InputGroup.Button onClick={onEditClick}>\r\n-          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n-        </InputGroup.Button>\r\n-      </InputGroup>\r\n-      {isEditable && (\r\n-        <InputGroup.Button onClick={onEditClick}>\r\n-          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n-        </InputGroup.Button>\r\n-      )}\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default EditableInput;\r\n"
                },
                {
                    "date": 1632465042636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     setIsEditable(curr => !curr);\r\n     setInput(initialValue);\r\n   }, [initialValue]);\r\n \r\n-  const onSaveClick=\r\n+  const onSaveClick = () => {};\r\n   return (\r\n     <div>\r\n       {label}\r\n       <InputGroup>\r\n@@ -35,9 +35,9 @@\n           <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n         </InputGroup.Button>\r\n         {isEditable && (\r\n           <InputGroup.Button onClick={onSaveClick}>\r\n-            <Icon icon='check' />\r\n+            <Icon icon=\"check\" />\r\n           </InputGroup.Button>\r\n         )}\r\n       </InputGroup>\r\n     </div>\r\n"
                },
                {
                    "date": 1632465057504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,47 @@\n+import React, { useCallback, useState } from 'react';\r\n+import { Icon, Input, InputGroup } from 'rsuite';\r\n+\r\n+const EditableInput = ({\r\n+  initialValue,\r\n+  onSave,\r\n+  label = '',\r\n+  placeholder = 'Write your value',\r\n+  ...inputProps\r\n+}) => {\r\n+  // emptyMsg = 'Input is empty ',\r\n+  const [input, setInput] = useState(initialValue);\r\n+  const [isEditable, setIsEditable] = useState(false);\r\n+  const onInputChange = useCallback(value => {\r\n+    setInput(value);\r\n+  }, []);\r\n+  const onEditClick = useCallback(() => {\r\n+    setIsEditable(curr => !curr);\r\n+    setInput(initialValue);\r\n+  }, [initialValue]);\r\n+\r\n+  const onSaveClick = () => {};\r\n+  return (\r\n+    <div>\r\n+      {label}\r\n+      <InputGroup>\r\n+        <Input\r\n+          {...inputProps}\r\n+          disabled={!isEditable}\r\n+          placeholder={placeholder}\r\n+          value={input}\r\n+          onChange={onInputChange}\r\n+        />\r\n+        <InputGroup.Button onClick={onEditClick}>\r\n+          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n+        </InputGroup.Button>\r\n+        {isEditable && (\r\n+          <InputGroup.Button onClick={onSaveClick}>\r\n+            <Icon icon=\"check\" />\r\n+          </InputGroup.Button>\r\n+        )}\r\n+      </InputGroup>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default EditableInput;\r\n"
                },
                {
                    "date": 1632465123355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,51 +44,4 @@\n   );\r\n };\r\n \r\n export default EditableInput;\r\n-import React, { useCallback, useState } from 'react';\r\n-import { Icon, Input, InputGroup } from 'rsuite';\r\n-\r\n-const EditableInput = ({\r\n-  initialValue,\r\n-  onSave,\r\n-  label = '',\r\n-  placeholder = 'Write your value',\r\n-  ...inputProps\r\n-}) => {\r\n-  // emptyMsg = 'Input is empty ',\r\n-  const [input, setInput] = useState(initialValue);\r\n-  const [isEditable, setIsEditable] = useState(false);\r\n-  const onInputChange = useCallback(value => {\r\n-    setInput(value);\r\n-  }, []);\r\n-  const onEditClick = useCallback(() => {\r\n-    setIsEditable(curr => !curr);\r\n-    setInput(initialValue);\r\n-  }, [initialValue]);\r\n-\r\n-  const onSaveClick = () => {};\r\n-  return (\r\n-    <div>\r\n-      {label}\r\n-      <InputGroup>\r\n-        <Input\r\n-          {...inputProps}\r\n-          disabled={!isEditable}\r\n-          placeholder={placeholder}\r\n-          value={input}\r\n-          onChange={onInputChange}\r\n-        />\r\n-        <InputGroup.Button onClick={onEditClick}>\r\n-          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n-        </InputGroup.Button>\r\n-        {isEditable && (\r\n-          <InputGroup.Button onClick={onSaveClick}>\r\n-            <Icon icon=\"check\" />\r\n-          </InputGroup.Button>\r\n-        )}\r\n-      </InputGroup>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default EditableInput;\r\n"
                },
                {
                    "date": 1632465201831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,49 @@\n+import React, { useCallback, useState } from 'react';\r\n+import { Icon, Input, InputGroup } from 'rsuite';\r\n+\r\n+const EditableInput = ({\r\n+  initialValue,\r\n+  onSave,\r\n+  label = '',\r\n+  placeholder = 'Write your value',\r\n+  ...inputProps\r\n+}) => {\r\n+  // emptyMsg = 'Input is empty ',\r\n+  const [input, setInput] = useState(initialValue);\r\n+  const [isEditable, setIsEditable] = useState(false);\r\n+  const onInputChange = useCallback(value => {\r\n+    setInput(value);\r\n+  }, []);\r\n+  const onEditClick = useCallback(() => {\r\n+    setIsEditable(curr => !curr);\r\n+    setInput(initialValue);\r\n+  }, [initialValue]);\r\n+\r\n+  const onSaveClick = () => {\r\n+    console.log('sfzfds');\r\n+  };\r\n+  return (\r\n+    <div>\r\n+      {label}\r\n+      <InputGroup>\r\n+        <Input\r\n+          {...inputProps}\r\n+          disabled={!isEditable}\r\n+          placeholder={placeholder}\r\n+          value={input}\r\n+          onChange={onInputChange}\r\n+        />\r\n+        <InputGroup.Button onClick={onEditClick}>\r\n+          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n+        </InputGroup.Button>\r\n+        {isEditable && (\r\n+          <InputGroup.Button onClick={onSaveClick}>\r\n+            <Icon icon=\"check\" />\r\n+          </InputGroup.Button>\r\n+        )}\r\n+      </InputGroup>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default EditableInput;\r\n"
                },
                {
                    "date": 1632465420381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,57 +18,8 @@\n     setIsEditable(curr => !curr);\r\n     setInput(initialValue);\r\n   }, [initialValue]);\r\n \r\n-  const onSaveClick = () => {\r\n-    console.log('sfzfds');\r\n-  };\r\n-  return (\r\n-    <div>\r\n-      {label}\r\n-      <InputGroup>\r\n-        <Input\r\n-          {...inputProps}\r\n-          disabled={!isEditable}\r\n-          placeholder={placeholder}\r\n-          value={input}\r\n-          onChange={onInputChange}\r\n-        />\r\n-        <InputGroup.Button onClick={onEditClick}>\r\n-          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n-        </InputGroup.Button>\r\n-        {isEditable && (\r\n-          <InputGroup.Button onClick={onSaveClick}>\r\n-            <Icon icon=\"check\" />\r\n-          </InputGroup.Button>\r\n-        )}\r\n-      </InputGroup>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default EditableInput;\r\n-import React, { useCallback, useState } from 'react';\r\n-import { Icon, Input, InputGroup } from 'rsuite';\r\n-\r\n-const EditableInput = ({\r\n-  initialValue,\r\n-  onSave,\r\n-  label = '',\r\n-  placeholder = 'Write your value',\r\n-  ...inputProps\r\n-}) => {\r\n-  // emptyMsg = 'Input is empty ',\r\n-  const [input, setInput] = useState(initialValue);\r\n-  const [isEditable, setIsEditable] = useState(false);\r\n-  const onInputChange = useCallback(value => {\r\n-    setInput(value);\r\n-  }, []);\r\n-  const onEditClick = useCallback(() => {\r\n-    setIsEditable(curr => !curr);\r\n-    setInput(initialValue);\r\n-  }, [initialValue]);\r\n-\r\n   const onSaveClick = () => {};\r\n   return (\r\n     <div>\r\n       {label}\r\n"
                },
                {
                    "date": 1632465523029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,52 @@\n+import React, { useCallback, useState } from 'react';\r\n+import { Alert, Icon, Input, InputGroup } from 'rsuite';\r\n+\r\n+const EditableInput = ({\r\n+  initialValue,\r\n+  onSave,\r\n+  label = '',\r\n+  placeholder = 'Write your value',\r\n+  emptyMsg = 'Input is empty ',\r\n+  ...inputProps\r\n+}) => {\r\n+  const [input, setInput] = useState(initialValue);\r\n+  const [isEditable, setIsEditable] = useState(false);\r\n+  const onInputChange = useCallback(value => {\r\n+    setInput(value);\r\n+  }, []);\r\n+  const onEditClick = useCallback(() => {\r\n+    setIsEditable(curr => !curr);\r\n+    setInput(initialValue);\r\n+  }, [initialValue]);\r\n+\r\n+  const onSaveClick = () => {\r\n+    const trimmed = input.trim();\r\n+    if (trimmed === '') {\r\n+      Alert.info(emptyMsg, 4000);\r\n+    }\r\n+  };\r\n+  return (\r\n+    <div>\r\n+      {label}\r\n+      <InputGroup>\r\n+        <Input\r\n+          {...inputProps}\r\n+          disabled={!isEditable}\r\n+          placeholder={placeholder}\r\n+          value={input}\r\n+          onChange={onInputChange}\r\n+        />\r\n+        <InputGroup.Button onClick={onEditClick}>\r\n+          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n+        </InputGroup.Button>\r\n+        {isEditable && (\r\n+          <InputGroup.Button onClick={onSaveClick}>\r\n+            <Icon icon=\"check\" />\r\n+          </InputGroup.Button>\r\n+        )}\r\n+      </InputGroup>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default EditableInput;\r\n"
                },
                {
                    "date": 1632465682230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,58 @@\n+import React, { useCallback, useState } from 'react';\r\n+import { Alert, Icon, Input, InputGroup } from 'rsuite';\r\n+\r\n+const EditableInput = ({\r\n+  initialValue,\r\n+  onSave,\r\n+  label = '',\r\n+  placeholder = 'Write your value',\r\n+  emptyMsg = 'Input is empty ',\r\n+  ...inputProps\r\n+}) => {\r\n+  const [input, setInput] = useState(initialValue);\r\n+  const [isEditable, setIsEditable] = useState(false);\r\n+  const onInputChange = useCallback(value => {\r\n+    setInput(value);\r\n+  }, []);\r\n+  const onEditClick = useCallback(() => {\r\n+    setIsEditable(curr => !curr);\r\n+    setInput(initialValue);\r\n+  }, [initialValue]);\r\n+\r\n+  const onSaveClick = async () => {\r\n+    const trimmed = input.trim();\r\n+    if (trimmed === '') {\r\n+      Alert.info(emptyMsg, 4000);\r\n+    }\r\n+\r\n+    if (trimmed !== initialValue) {\r\n+      await onSave(trimmed);\r\n+    }\r\n+\r\n+    setIsEditable(false);\r\n+  };\r\n+  return (\r\n+    <div>\r\n+      {label}\r\n+      <InputGroup>\r\n+        <Input\r\n+          {...inputProps}\r\n+          disabled={!isEditable}\r\n+          placeholder={placeholder}\r\n+          value={input}\r\n+          onChange={onInputChange}\r\n+        />\r\n+        <InputGroup.Button onClick={onEditClick}>\r\n+          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n+        </InputGroup.Button>\r\n+        {isEditable && (\r\n+          <InputGroup.Button onClick={onSaveClick}>\r\n+            <Icon icon=\"check\" />\r\n+          </InputGroup.Button>\r\n+        )}\r\n+      </InputGroup>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default EditableInput;\r\n"
                }
            ],
            "date": 1632463527797,
            "name": "Commit-0",
            "content": "import React from 'react';\r\n\r\nconst EditableInput = () => {\r\n  return <div>Hello</div>;\r\n};\r\n\r\nexport default EditableInput;\r\n"
        }
    ]
}